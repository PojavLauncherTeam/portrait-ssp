apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.0'
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }
}

android {
    compileSdkVersion 32
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 32
    }
}

class SSPFactory extends DefaultTask {

    @Input
    String unit = "sp"
    @Input
    double positiveMax = 100

    @TaskAction
    def create() {
        String resFolder =  project.getProjectDir().getPath() + "/src/main/res/";
        for(double dimen = 300; dimen <= 1080 ; dimen = dimen + 30){
            createPositive(resFolder, dimen)
        }

        //Defaut fallback, indirectly used by landscape mode
        {
            String folder = resFolder + "values"
            String fileName = folder + "/positive_ssps.xml"
            new File(folder).mkdir()
            new File(fileName).createNewFile()
            PrintWriter printWriter = new PrintWriter(fileName)
            printWriter.println("<?xml version=\"1.0\" encoding=\"utf-8\"?>")
            printWriter.println("<resources>")
            for(int i=1;i<=positiveMax;i++){
                printWriter.printf("\t<dimen name=\"_%dssp\">%.2f" + unit + "</dimen>\r\n",i,i)
            }
            printWriter.println("</resources>")
            printWriter.close()
        }
    }

    private void createPositive(String resFolder, double dimen) {
        String folder = resFolder + "values-sw" + (int) dimen + "dp" + "-port";
        String fileName = folder + "/positive_ssps.xml";
        new File(folder).mkdir();
        new File(fileName).createNewFile();
        PrintWriter printWriter = new PrintWriter(fileName);
        printWriter.println("<?xml version=\"1.0\" encoding=\"utf-8\"?>");
        printWriter.println("<resources>");
            for(int i=1; i<=positiveMax; i++){
            double ratio = i / 300d;
            double ssp = ratio * dimen;
            printWriter.printf("\t<dimen name=\"_%dssp\">%.2f" + unit + "</dimen>\r\n", i, ssp);
        }
        printWriter.println("</resources>");
        printWriter.close();
    }

}

task createSSP(type: SSPFactory) {
}

//uncomment next line to edit values
//preBuild.dependsOn createSSP

createSSP{
    unit = "sp"
    positiveMax = 100//change to 600 or any other value if needed
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = 'net.kdt.pojavlaunch'
                artifactId = 'portrait-ssp'
                version = '1.0.0'
            }
        }
    }
}

